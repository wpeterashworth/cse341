{
  "swagger": "2.0",
  "info": {
    "title": "Contacts API",
    "description": "API for managing contacts stored in MongoDB",
    "version": "1.0.0"
  },
  "host": "cse341-3rzs.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Contacts",
      "description": "Endpoints for managing contacts"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/contacts": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contacts/single/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contacts/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/bro": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "blue"
        },
        "birthday": {
          "type": "string",
          "example": "January 1st, 2000"
        }
      }
    },
    "ContactInput": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "blue"
        },
        "birthday": {
          "type": "string",
          "example": "January 1st, 2000"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "favoriteColor",
        "birthday"
      ]
    },
    "NewContactResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Contact created successfully"
        },
        "contact": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "firstName": {
              "type": "string",
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "example": "Doe"
            },
            "email": {
              "type": "string",
              "example": "john.doe@example.com"
            },
            "favoriteColor": {
              "type": "string",
              "example": "blue"
            },
            "birthday": {
              "type": "string",
              "example": "January 1st, 2000"
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Error message"
        }
      }
    }
  }
}